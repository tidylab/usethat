# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    # branches:
    #   - master
  pull_request:
    branches:
      - master
      - develop

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,  r: '4.2.1'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_COMPILE_AND_INSTALL_PACKAGES: always
      NOT_CRAN: false
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Prepare
        run: |
          echo "utils::chooseCRANmirror(graphics=FALSE, ind = 1)" > .Rprofile
          Rscript -e "Date <- as.character(read.dcf('DESCRIPTION', 'Date'));
                      URL <- if(is.na(Date)) 'https://cran.rstudio.com/' else paste0('https://mran.microsoft.com/snapshot/', Date);
                      Rprofile <- file('.Rprofile', open = 'wt');
                      writeLines('.libPaths(Sys.getenv(\'R_LIBS_USER\'))', Rprofile);
                      writeLines('require(remotes, quietly = TRUE)', Rprofile);
                      writeLines(paste0('options(repos = \'', URL, '\')'), Rprofile);
                      close(Rprofile)"
          Rscript -e "if(!'remotes' %in% rownames(utils::installed.packages())) utils::install.packages('remotes')"
          Rscript -e "update_packages(dependencies = TRUE)"

      - name: Query Project Dependencies
        run: |
          saveRDS(dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install System Dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(system_requirements("ubuntu", "20.04"))')
          sudo apt-get install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev libgit2-dev

      - name: Install Project Dependencies
        run: |
          install_deps(dependencies = TRUE)
          install_cran(c("devtools", "rcmdcheck", "rmarkdown"))
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          devtools::document()
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
