# OS ---------------------------------------------------------------------------
os: linux

# meta -------------------------------------------------------------------------
language: r
r: 4.0.0
cache:
  packages: true
  ccache: true
latex: true

# environment variables --------------------------------------------------------
env:
  global:
    - MAKEFLAGS="-j 2"

# jobs -------------------------------------------------------------------------
before_install:
 - rm -rf .Rprofile .Renviron
 - R -q -e
    'Date <- as.character(read.dcf("DESCRIPTION", "Date"));
     URL <- if(is.na(Date)) "https://cran.rstudio.com/" else paste0("https://mran.microsoft.com/snapshot/", Date);
     Rprofile <- file(".Rprofile", open = "wt");
     writeLines(paste0("options(repos = \"", URL ,"\")"), Rprofile);
     close(Rprofile)'
 - R -q -e
    '`%=%` <- function(key, value) paste0(key,"=",value);
     Renviron <- file(".Renviron", open = "wt");
     writeLines("R_USER" %=% Sys.getenv("R_USER"), Renviron);
     close(Renviron)'
 - R -q -e 'if(!"remotes" %in% rownames(utils::installed.packages())) utils::install.packages("remotes")'
 - R -q -e 'remotes::install_github("ropensci/tic@v0.9.0")'
 - R -q -e 'tic::dsl_load(); tic::prepare_all_stages(); tic::before_script()'
install:
 - R -q -e 'tic::install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  skip_cleanup: true
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'
